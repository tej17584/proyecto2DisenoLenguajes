#/*-------------------------------------------------------------------------
#Coco.py -- the Compiler Driver
#Compiler Generator Coco/R,
#Copyright (c) 1990, 2004 Hanspeter Moessenboeck, University of Linz
#extended by M. Loeberbauer & A. Woess, Univ. of Linz
#ported from Java to Python by Ronald Longo
#
#This program is free software; you can redistribute it and/or modify it
#under the terms of the GNU General Public License as published by the
#Free Software Foundation; either version 2, or (at your option) any
#later version.
#
#This program is distributed in the hope that it will be useful, but
#WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#for more details.
#
#You should have received a copy of the GNU General Public License along
#with this program; if not, write to the Free Software Foundation, Inc.,
#59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
#As an exception, it is allowed to write an extension of Coco/R that is
#used as a plugin in non-free software.
#
#If not otherwise stated, any source code generated by Coco/R (other than
#Coco/R itself) does not fall under the GNU General Public License.
#-------------------------------------------------------------------------*/

# Expr.ATG was originally from the samples directory of the C/C++
# implementation of Coco.
# This version of EXPR.ATG/.frame was ported for use with CocoPy by
# Wayne Wiitanen, 13 DEC 2007.

import sys
import os

from Scanner import *
from Parser import *

-->begin

# Initialize the Scanner
parser  = Parser( )
Errors.Init( 'interactive', '', False, parser.getParsingPos, parser.errorMessages )

while True :
    try :
        strVal = raw_input( "Expr>" )

    except EOFError :
        break;

    if len(strVal) == 0 :
        break;

    scanner = Scanner( strVal )
    parser.Parse( scanner )

    if Errors.count > 0 :
        Errors.Summarize( scanner.buffer )
        Errors.count = 0;

sys.exit( 0 )

$$$
